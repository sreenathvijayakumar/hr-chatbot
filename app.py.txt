import streamlit as st
from PyPDF2 import PdfReader
from sentence_transformers import SentenceTransformer
from transformers import pipeline
import faiss
import numpy as np

st.set_page_config(page_title="HR Policy Chatbot", page_icon="ðŸ¤–")
st.title("ðŸ¤– HR Policy Chatbot")
st.write("Ask any question about your companyâ€™s HR policies!")

pdf = st.file_uploader("Upload your HR Policy PDF", type="pdf")
if pdf:
    pdf_reader = PdfReader(pdf)
    text = ""
    for page in pdf_reader.pages:
        text += page.extract_text()

    chunks = [text[i:i+500] for i in range(0, len(text), 500)]

    model = SentenceTransformer('all-MiniLM-L6-v2')
    embeddings = model.encode(chunks)
    index = faiss.IndexFlatL2(embeddings.shape[1])
    index.add(np.array(embeddings))

    qa_model = pipeline("text-generation", model="mistralai/Mistral-7B-Instruct-v0.2", device_map="auto", max_new_tokens=200)

    question = st.text_input("Ask your question:")
    if question:
        q_emb = model.encode([question])
        _, top_indices = index.search(np.array(q_emb), k=3)
        context = " ".join([chunks[i] for i in top_indices[0]])

        prompt = f"Answer the question based only on this HR policy context:\n\n{context}\n\nQuestion: {question}\nAnswer:"
        with st.spinner("Thinking..."):
            answer = qa_model(prompt)[0]["generated_text"].split("Answer:")[-1].strip()
        st.success(answer)


